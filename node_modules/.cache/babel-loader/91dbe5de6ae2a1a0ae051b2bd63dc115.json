{"ast":null,"code":"var _jsxFileName = \"/home/black/React-website/src/components/About/Aboutsection.js\";\nimport React from 'react';\nimport Title from \"../Title/Title\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Aboutsection() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../../images/about/01.png\"),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 10,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6\",\n          children: [/*#__PURE__*/_jsxDEV(Title, {\n            about: \"about\",\n            abouttitle: \"roomedia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"accordion\",\n            id: \"accordionExample\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                class: \"accordion-header\",\n                id: \"headingOne\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"accordion-button\",\n                  type: \"button\",\n                  \"data-bs-toggle\": \"collapse\",\n                  \"data-bs-target\": \"#collapseOne\",\n                  \"aria-expanded\": \"true\",\n                  \"aria-controls\": \"collapseOne\",\n                  children: \"Who We Are\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 16,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"collapseOne\",\n                class: \"accordion-collapse collapse show\",\n                \"aria-labelledby\": \"headingOne\",\n                \"data-bs-parent\": \"#accordionExample\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"accordion-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"This is the first item's accordion body.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 41\n                  }, this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \".accordion-body\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 23,\n                    columnNumber: 460\n                  }, this), \", though the transition does limit overflow.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                class: \"accordion-header\",\n                id: \"headingTwo\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"accordion-button collapsed\",\n                  type: \"button\",\n                  \"data-bs-toggle\": \"collapse\",\n                  \"data-bs-target\": \"#collapseTwo\",\n                  \"aria-expanded\": \"false\",\n                  \"aria-controls\": \"collapseTwo\",\n                  children: \"Accordion Item #2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 29,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"collapseTwo\",\n                class: \"accordion-collapse collapse\",\n                \"aria-labelledby\": \"headingTwo\",\n                \"data-bs-parent\": \"#accordionExample\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"accordion-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"This is the second item's accordion body.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 41\n                  }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \".accordion-body\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 35,\n                    columnNumber: 462\n                  }, this), \", though the transition does limit overflow.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"accordion-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                class: \"accordion-header\",\n                id: \"headingThree\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  class: \"accordion-button collapsed\",\n                  type: \"button\",\n                  \"data-bs-toggle\": \"collapse\",\n                  \"data-bs-target\": \"#collapseThree\",\n                  \"aria-expanded\": \"false\",\n                  \"aria-controls\": \"collapseThree\",\n                  children: \"Accordion Item #3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"collapseThree\",\n                class: \"accordion-collapse collapse\",\n                \"aria-labelledby\": \"headingThree\",\n                \"data-bs-parent\": \"#accordionExample\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"accordion-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"This is the third item's accordion body.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 41\n                  }, this), \" It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n                    children: \".accordion-body\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 47,\n                    columnNumber: 461\n                  }, this), \", though the transition does limit overflow.\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_c = Aboutsection;\nexport default Aboutsection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Aboutsection\");","map":{"version":3,"names":["React","Title","Aboutsection","require"],"sources":["/home/black/React-website/src/components/About/Aboutsection.js"],"sourcesContent":["import React from 'react'\nimport Title from \"../Title/Title\"\n\nfunction Aboutsection() {\n    return (\n        <>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <img src={require(\"../../images/about/01.png\")} alt=\"\" />\n                    </div>\n                    <div className=\"col-6\">\n                        <Title about={\"about\"} abouttitle={\"roomedia\"} />\n                        <div class=\"accordion\" id=\"accordionExample\">\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\" id=\"headingOne\">\n                                    <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                                        Who We Are\n                                    </button>\n                                </h2>\n                                <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\n                                    <div class=\"accordion-body\">\n                                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\" id=\"headingTwo\">\n                                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                                        Accordion Item #2\n                                    </button>\n                                </h2>\n                                <div id=\"collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\n                                    <div class=\"accordion-body\">\n                                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                    </div>\n                                </div>\n                            </div>\n                            <div class=\"accordion-item\">\n                                <h2 class=\"accordion-header\" id=\"headingThree\">\n                                    <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                                        Accordion Item #3\n                                    </button>\n                                </h2>\n                                <div id=\"collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\n                                    <div class=\"accordion-body\">\n                                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Aboutsection"],"mappings":"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"},"metadata":{},"sourceType":"module"}